"""File Generated by Sideko (sideko.dev)"""

from teachable_public_api.core import (
    default_request_options,
    AsyncBaseClient,
    SyncBaseClient,
    RequestOptions,
)
from teachable_public_api.resources.v1.webhooks.events import (
    EventsClient,
    AsyncEventsClient,
)
import typing
from teachable_public_api.types.v1.webhooks import models


class WebhooksClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)
        self.events = EventsClient(base_client=self._base_client)

    # register sync api methods (keep comment for code generation)
    def list(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> models.ListWebhooksResponse:
        """
        Fetch all webhook events for your school.
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="GET",
            path="/v1/webhooks",
            auth_names=["ApiKeyAuth"],
            cast_to=models.ListWebhooksResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncWebhooksClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)
        self.events = AsyncEventsClient(base_client=self._base_client)

    # register async api methods (keep comment for code generation)
    async def list(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> models.ListWebhooksResponse:
        """
        Fetch all webhook events for your school.
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="GET",
            path="/v1/webhooks",
            auth_names=["ApiKeyAuth"],
            cast_to=models.ListWebhooksResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
