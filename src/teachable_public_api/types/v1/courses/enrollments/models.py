"""File Generated by Sideko (sideko.dev)"""

import io
import typing


import pydantic

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class UserEnrollment(pydantic.BaseModel):
    model_config = pydantic.ConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    completed_at: typing.Optional[str] = pydantic.Field(
        alias="completed_at", default=None
    )
    enrolled_at: str = pydantic.Field(alias="enrolled_at")
    expires_at: typing.Optional[str] = pydantic.Field(alias="expires_at", default=None)
    percent_complete: int = pydantic.Field(alias="percent_complete")
    user_id: int = pydantic.Field(alias="user_id")


class PaginationMeta(pydantic.BaseModel):
    model_config = pydantic.ConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    from_field: int = pydantic.Field(alias="from")
    number_of_pages: int = pydantic.Field(alias="number_of_pages")
    page: int = pydantic.Field(alias="page")
    per_page: int = pydantic.Field(alias="per_page")
    to: int = pydantic.Field(alias="to")
    total: int = pydantic.Field(alias="total")


class ListCourseEnrollmentsResponse(pydantic.BaseModel):
    model_config = pydantic.ConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    enrollments: typing.List[UserEnrollment] = pydantic.Field(alias="enrollments")
    meta: PaginationMeta = pydantic.Field(alias="meta")
